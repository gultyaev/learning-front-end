{"version":3,"file":"component---src-pages-index-tsx-e7fe6d09cac46a6539ac.js","mappings":"qNAQMA,EAAAA,SAAkB,GAAGC,IAAAA,EAAgD,EAAhDA,WACnBC,EACJD,OAAAA,EAAAA,aAEIA,QAAAA,EAAAA,eAHN,cAOA,OACE,qBACE,oBADF,uBAEE,gBAAMC,UAAS,eAAf,2BAHJ,GARF,EAuDA,MArCA,SAAgC,GAAEC,IAAAA,EAAqC,EAArCA,KAChC,IAAKA,EAAL,YACE,MAAM,UAAN,4BAGF,OACE,gBACEC,GAAE,YAAcD,EAAd,KADJ,IAEED,UAFF,oFAIE,mBAASA,UAAT,qDACE,cAAIA,UAAJ,yDACGC,EAAAA,YAFL,QAIE,iBAAIA,EAAAA,YAJN,aAMGA,EAAAA,YAAAA,gBACC,oBACE,oBADF,oBAEE,kBACGA,EAAAA,YAAAA,cAAAA,KAAmC,qBAClC,cAAID,UAAJ,iBAA+BG,IAA/B,GADkC,EAV5C,OAmBE,WACEJ,WAAYE,EAAAA,YAzBpB,cAgCF,ECpBA,EAjCkB,SAAC,GAA6B,IAA3BA,EAA2B,EAA3BA,KACnB,OACE,aAAQG,YAAY,kFAClB,kBADF,aAGE,iBAHF,0RAWE,iBAXF,6LAiBE,cAAIJ,UAAU,4BACXC,EAAA,kBAAsB,mBACrB,cAAIE,IAAKE,EAAEC,OACT,WACEL,KADF,EAEEE,IAAKE,EAAEC,OAvBnB,KADF,C","sources":["webpack://front-end-starters/./src/components/StarterProjectListItem.tsx","webpack://front-end-starters/./src/pages/index.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { P, Ul } from \"./Primitives\";\n\ninterface StarterProjectListItemProps {\n  data: Queries.StarterProjectsQuery[\"allMdx\"][\"nodes\"][0];\n}\n\nconst ComplexityLevel = ({ complexity }: { complexity: string | null }) => {\n  const className =\n    complexity === \"hi\"\n      ? \"bg-red-900\"\n      : complexity === \"med\"\n      ? \"bg-amber-600\"\n      : \"bg-lime-700\";\n\n  return (\n    <span>\n      <span>Complexity level: </span>\n      <span className={`uppercase ${className} py-0.5 px-2 rounded-md`}>\n        {complexity}\n      </span>\n    </span>\n  );\n};\n\nfunction StarterProjectListItem({ data }: StarterProjectListItemProps) {\n  if (!data.frontmatter) {\n    throw new Error(\"Missing requried content\");\n  }\n\n  return (\n    <Link\n      to={`/project/${data.slug}/`}\n      className=\"[@media(any-hover:hover)]:hover:scale-105 transition-all hover:shadow-2xl block\"\n    >\n      <article className=\"flex flex-col bg-slate-900 px-8 py-7 rounded-2xl\">\n        <h2 className=\"text-3xl mb-6 text-amber-500 self-start font-semibold\">\n          {data.frontmatter.title}\n        </h2>\n        <P>{data.frontmatter.description}</P>\n\n        {data.frontmatter.prerequisites && (\n          <div>\n            <span>Prerequisites: </span>\n            <Ul>\n              {data.frontmatter.prerequisites.map((e, i) => (\n                <li className=\"list-disc ml-8\" key={i}>\n                  {e}\n                </li>\n              ))}\n            </Ul>\n          </div>\n        )}\n\n        <ComplexityLevel\n          complexity={data.frontmatter.complexity}\n        ></ComplexityLevel>\n      </article>\n    </Link>\n  );\n}\n\nexport default StarterProjectListItem;\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { H1, P } from \"../components/Primitives\";\nimport StarterProjectListItem from \"../components/StarterProjectListItem\";\n\ninterface IndexPageProps {\n  data: Queries.StarterProjectsQuery;\n}\n\nconst IndexPage = ({ data }: IndexPageProps) => {\n  return (\n    <Layout description=\"API services aimed to help beginner front-end developers to learn by practice\">\n      <H1>Projects</H1>\n\n      <P>\n        This page contains a bunch of projects that are API services aimed to\n        help beginner front-end developers to learn by practice. Also, projects\n        target real life-like scenarios, so the experience earned by\n        implementing the front-end part and connecting with an API will be\n        viable.\n      </P>\n\n      <P>\n        You can approach front-end creation using any technology stack you\n        prefer as these projects are pure API with no front-end attached. You\n        could make even a web site on pure HTML/CSS/JS!\n      </P>\n\n      <ul className=\"flex flex-col py-6 gap-6\">\n        {data.allMdx.nodes.map((n) => (\n          <li key={n.slug}>\n            <StarterProjectListItem\n              data={n}\n              key={n.slug}\n            ></StarterProjectListItem>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query StarterProjects {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { type: { eq: \"project\" } } }\n    ) {\n      nodes {\n        slug\n        frontmatter {\n          title\n          description\n          prerequisites\n          complexity\n        }\n      }\n    }\n  }\n`;\n"],"names":["ComplexityLevel","complexity","className","data","to","key","description","n","slug"],"sourceRoot":""}